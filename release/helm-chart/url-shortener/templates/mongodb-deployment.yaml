apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "url-shortener.fullname" . }}-mongodb
  labels:
    {{- include "url-shortener.labels" . | nindent 4 }}
    app.kubernetes.io/component: mongodb
spec:
  serviceName: {{ include "url-shortener.fullname" . }}-mongodb
  replicas: 1
  selector:
    matchLabels:
      {{- include "url-shortener.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: mongodb
  template:
    metadata:
      labels:
        {{- include "url-shortener.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: mongodb
    spec:
      securityContext:
        fsGroup: 999
      containers:
        - name: mongodb
          image: "{{ .Values.mongodb.image.repository }}:{{ .Values.mongodb.image.tag }}"
          imagePullPolicy: IfNotPresent
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mongodb.auth.existingSecret }}
                  key: {{ .Values.mongodb.auth.userKey }}
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mongodb.auth.existingSecret }}
                  key: {{ .Values.mongodb.auth.passwordKey }}
          ports:
            - name: mongodb
              containerPort: 27017
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 5
            timeoutSeconds: 5
          resources:
            {{- toYaml .Values.mongodb.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /data/db
            - name: config
              mountPath: /data/configdb
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.mongodb.persistence.size }}