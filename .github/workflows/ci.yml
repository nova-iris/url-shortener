name: CI

on:
  push:
    branches:
      - '*'
      - '!main'  # Main branch has its own workflow
    paths:
      - 'client/**'
      - 'server/**'
      - '.github/workflows/**'
      - 'release/**'

jobs:
  lint-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: [client, server]
    defaults:
      run:
        working-directory: ./${{ matrix.component }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.component == 'client' && '18' || '16' }}
        cache: 'npm'
        cache-dependency-path: ${{ matrix.component }}/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Lint code
      run: npm run lint || echo "Linting not configured, skipping"

    - name: Run tests
      run: npm test || echo "Tests not configured, skipping"

  build-client:
    runs-on: ubuntu-latest
    needs: lint-test
    defaults:
      run:
        working-directory: ./client

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './client/package-lock.json'

    - name: Install dependencies
      run: npm ci

    - name: Build client
      run: npm run build
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-client-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-client-

    - name: Build and tag Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./client
        push: false
        tags: ghcr.io/nova-iris/urlshortener-client:${{ github.sha }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
        load: true
        
    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      working-directory: /
      
    - name: Archive build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: client-dist
        path: ./client/dist/

  build-server:
    runs-on: ubuntu-latest
    needs: lint-test
    defaults:
      run:
        working-directory: ./server

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'npm'
        cache-dependency-path: 'server/package-lock.json'

    - name: Install dependencies
      run: npm ci
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-server-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-server-

    - name: Build and tag Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./server
        push: false
        tags: ghcr.io/nova-iris/urlshortener-server:${{ github.sha }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
        load: true
        
    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      working-directory: /

  validate-helm-chart:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: 'latest'
        
    - name: Lint Helm chart
      run: helm lint ./release/helm-chart/url-shortener
      
    - name: Validate Helm chart
      run: helm template ./release/helm-chart/url-shortener
      
  validate-docker-compose:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Install docker-compose-validator
      run: |
        npm install -g docker-compose-validator
        
    - name: Validate docker-compose.yml
      run: |
        docker-compose-validator ./release/docker/docker-compose.yml
        
  e2e-tests:
    runs-on: ubuntu-latest
    needs: [build-client, build-server]
    if: github.ref != 'refs/heads/main'
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Docker Compose
      run: |
        docker compose --version
        
    - name: Download client artifact
      uses: actions/download-artifact@v3
      with:
        name: client-dist
        path: ./client/dist/
        
    - name: Start services
      run: |
        cd ./release/docker
        docker compose up -d
        
    - name: Wait for services
      run: |
        sleep 30
        
    - name: Run e2e tests
      run: |
        echo "Running e2e tests..." 
        # This is a placeholder for actual e2e tests
        curl -s http://localhost:5000/health | grep -q "ok"
        
    - name: Cleanup
      if: always()
      run: |
        cd ./release/docker
        docker compose down -v