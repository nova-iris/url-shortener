# name: CI/CD - Production (main branch)

# on:
#   push:
#     branches: [main]

# env:
#   REGISTRY: ghcr.io
#   IMAGE_NAME: ${{ github.repository }}

# jobs:
#   build-and-push:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         component: [client, server]
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2

#       - name: Log in to GitHub Container Registry
#         uses: docker/login-action@v3
#         with:
#           registry: ${{ env.REGISTRY }}
#           username: ${{ github.actor }}
#           password: ${{ secrets.GITHUB_TOKEN }}

#       - name: Extract version from package.json
#         id: version
#         run: |
#           if [ "${{ matrix.component }}" = "client" ]; then
#             echo "VERSION=$(jq -r .version src/client/package.json)" >> $GITHUB_ENV
#           else
#             echo "VERSION=$(jq -r .version src/server/package.json)" >> $GITHUB_ENV
#           fi

#       - name: Build and push Docker image
#         uses: docker/build-push-action@v4
#         with:
#           context: ./src/${{ matrix.component }}
#           file: ./src/${{ matrix.component }}/Dockerfile
#           push: true
#           tags: |
#             ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.component }}:latest
#             ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.component }}:${{ env.VERSION }}
#             ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.component }}:${{ github.sha }}

#   deploy-production:
#     needs: build-and-push
#     runs-on: ubuntu-latest
#     steps:
#       - name: Deploy to Production
#         run: |
#           echo "Deploying to production environment..."
#           # Add your deployment script/command here (e.g., kubectl, helm, etc.)

#   tag-git:
#     needs: deploy-production
#     runs-on: ubuntu-latest
#     steps:
#       - name: Tag Git Repo
#         run: |
#           git config user.name "${{ github.actor }}"
#           git config user.email "${{ github.actor }}@users.noreply.github.com"
#           git tag v${{ env.VERSION }}
#           git push origin v${{ env.VERSION }}

#   notify:
#     needs: tag-git
#     runs-on: ubuntu-latest
#     steps:
#       - name: Notify
#         run: |
#           echo "Production deployment complete!"
#           # Add Slack, Discord, or GitHub comment notification here 