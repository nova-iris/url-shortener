name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.PAT }}

    - name: Extract metadata for client
      id: meta-client
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ github.repository }}/client
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable=${{ github.ref_type == 'tag' }}

    - name: Extract metadata for server
      id: meta-server
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ github.repository }}/server
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable=${{ github.ref_type == 'tag' }}

    - name: Build and push client image
      uses: docker/build-push-action@v4
      with:
        context: ./client
        push: true
        tags: ${{ steps.meta-client.outputs.tags }}
        labels: ${{ steps.meta-client.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push server image
      uses: docker/build-push-action@v4
      with:
        context: ./server
        push: true
        tags: ${{ steps.meta-server.outputs.tags }}
        labels: ${{ steps.meta-server.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        generate_release_notes: true
        files: |
          release/docker/docker-compose.yml
          release/docker/.env.example